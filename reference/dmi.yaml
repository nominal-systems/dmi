openapi: 3.1.0
x-stoplight:
  id: 545mk2dwwzqkv
info:
  title: dmi
  version: 1.0.0
servers:
  - url: 'http://localhost:3000'
    description: Local
paths:
  /users:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateDTO'
            examples:
              Create user Alice Smith with password 123456789:
                value:
                  email: alice.smith@gmail.com
                  password: '123456789'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      security: []
      tags:
        - Users
    parameters: []
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User by ID
      tags:
        - Users
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    email: alice.smith@gmail.com
                    createdDate: '2022-01-01'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      security:
        - Bearer token: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          email: alice.smith@gmail.com
          createdDate: '2022-01-01'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        email:
          type: string
          format: email
        createdDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - email
        - createdDate
    UserCreateDTO:
      title: UserCreateDTO
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 8
          maxLength: 32
      required:
        - email
        - password
      examples:
        - email: alice.smith@gmail.com
          password: '123456789'
  securitySchemes:
    API Key:
      type: apiKey
      name: API Key
      in: header
      description: ''
    Bearer token:
      type: http
      scheme: bearer
      description: ''
  requestBodies: {}
