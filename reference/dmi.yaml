openapi: 3.0.0
x-stoplight:
  id: 545mk2dwwzqkv
info:
  title: dmi
  version: 0.1.0
servers:
  - url: 'http://localhost:3000'
    description: Local
paths:
  /users:
    post:
      summary: Create a new User
      operationId: post-users
      description: Create a new User.
      requestBody:
        $ref: './requestBodies/UserCredentialsBody.yaml'
      responses:
        '201':
          $ref: './responses/UserCreated.yaml'
        '400':
          $ref: './responses/400BadRequest.yaml'
        '401':
          $ref: './responses/401Unauthorized.yaml'
        '409':
          description: Email Already Taken
      security:
        - BasicAuth: [ ]
      tags:
        - Admin
    get:
      summary: Get all Users
      operationId: get-users
      description: Get all Users.
      responses:
        '200':
          $ref: './responses/UserList.yaml'
        '401':
          $ref: './responses/401Unauthorized.yaml'
      security:
        - BasicAuth: [ ]
      tags:
        - Admin
  /users/{userId}:
    parameters:
      - $ref: './parameters/userId.yaml'
    get:
      summary: Get User by ID
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      responses:
        '200':
          $ref: './responses/UserFound.yaml'
        '404':
          description: User Not Found
        '401':
          $ref: './responses/401Unauthorized.yaml'
      security:
        - BasicAuth: [ ]
      tags:
        - Admin
  /users/auth:
    post:
      summary: Login
      operationId: post-users-auth
      description: Login the user with the matching email and password.
      requestBody:
        $ref: './requestBodies/UserCredentialsBody.yaml'
      responses:
        '200':
          $ref: './responses/AuthTokenIssued.yaml'
        '401':
          $ref: './responses/401Unauthorized.yaml'
      tags:
        - Users
  /users/me:
    get:
      summary: Get logged-in User
      operationId: get-users-me
      description: Retrieve the information of the logged in user.
      responses:
        '200':
          $ref: './responses/UserFound.yaml'
        '401':
          $ref: './responses/401Unauthorized.yaml'
      security:
        - BearerAuth: [ ]
      tags:
        - Users
  /users/me/password:
    put:
      summary: Update logged-in User password
      operationId: put-users-me-password
      description: Update the password of the logged in user.
      requestBody:
        $ref: './requestBodies/UserPasswordBody.yaml'
      responses:
        '200':
          description: Password Updated
        '400':
          $ref: './responses/400BadRequest.yaml'
        '401':
          $ref: './responses/401Unauthorized.yaml'
      security:
        - BearerAuth: [ ]
      tags:
        - Users
  /organizations:
    post:
      summary: Create a new organization
      operationId: post-organizations
      description: Create a new Organization.
      requestBody:
        $ref: './requestBodies/OrganizationCreateBody.yaml'
      responses:
        '201':
          $ref: './responses/OrganizationCreated.yaml'
        '400':
          $ref: './responses/400BadRequest.yaml'
        '401':
          $ref: './responses/401Unauthorized.yaml'
        '409':
          description: Organization name already taken.
      security:
        - BearerAuth: [ ]
      tags:
        - Organizations
  /organizations/{organizationId}:
    parameters:
      - $ref: './parameters/organizationId.yaml'
    get:
      summary: Get organization by ID
      operationId: get-organizations-organizationId
      description: Retrieve the information of the organization with the matching organization ID.
      responses:
        '200':
          $ref: './responses/OrganizationFound.yaml'
        '404':
          description: Organization Not Found
        '401':
          $ref: './responses/401Unauthorized.yaml'
      security:
        - BearerAuth: [ ]
      tags:
        - Organizations
  /organizations/{organizationId}/keys:
    parameters:
      - $ref: './parameters/organizationId.yaml'
    get:
      summary: Get organization API keys
      operationId: get-organizations-organizationId-keys
      description: Retrieve the API keys of the organization with the matching organization ID.
      responses:
        '200':
          $ref: './responses/OrganizationKeysFound.yaml'
        '404':
          description: Organization Not Found
        '401':
          $ref: './responses/401Unauthorized.yaml'
      tags:
        - Organizations
    put:
      summary: Regenerate organization API keys
      operationId: put-organizations-organizationId-keys
      description: Regenerate the API keys of the organization with the matching organization ID.
      responses:
        '200':
          $ref: './responses/OrganizationKeysFound.yaml'
        '404':
          description: Organization Not Found
        '401':
          $ref: './responses/401Unauthorized.yaml'
      tags:
        - Organizations
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
